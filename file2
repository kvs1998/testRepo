# app_driver.py
import streamlit as st
import pandas as pd

# Import the data fetching module
import snowflake_data

# Import functions for each tab
from tabs import overview_tab
from tabs import dt_state_tab
from tabs import refresh_stats_tab
from tabs import dt_health_tab

st.set_page_config(layout="wide", page_title="Dynamic Table Dashboard", icon="üìä")
st.title("Dynamic Table Refresh Status Dashboard")

# --- Global Data Loading with Loading Indicators ---
# Use st.spinner and st.toast for fetching data, as they are outside the cached function.
try:
    with st.spinner("Connecting to Snowflake and fetching data..."):
        # Explicitly call the fetching functions
        history_df = snowflake_data.fetch_dt_refresh_history_data()
        metadata_df = snowflake_data.fetch_dt_metadata_latest_snapshot_data()
    
    st.toast("All data loaded successfully!", icon="‚úÖ")

except Exception as e:
    st.error(f"Failed to load data: {e}. Please ensure your Snowflake connection and data tables are correctly set up.", icon="‚ùó")
    history_df = pd.DataFrame() # Ensure DFs are empty if loading failed
    metadata_df = pd.DataFrame() # So subsequent tab logic handles them gracefully

# Initial check for critical data availability after loading attempts
if history_df.empty and metadata_df.empty:
    st.error("Dashboard cannot render without any data. Please resolve data loading issues.", icon="‚ùó")
    st.stop()
elif history_df.empty:
    st.warning("Historical refresh data is missing. Some tabs may not display correctly.", icon="‚ö†Ô∏è")
elif metadata_df.empty:
    st.warning("Dynamic table metadata is missing. The 'DT HEALTH' tab will not display correctly.", icon="‚ö†Ô∏è")


# --- Tab Definitions ---
tab_names = ["Overview", "DT STATE", "REFRESH_STATS", "DT HEALTH", "Product Analysis"]
tab1, tab_dt_state, tab_refresh_stats, tab_dt_health, tab3 = st.tabs(tab_names)


# --- Render Tabs ---
with tab1:
    overview_tab.render_overview_tab(history_df)

with tab_dt_state:
    dt_state_tab.render_dt_state_tab(history_df)

with tab_refresh_stats:
    refresh_stats_tab.render_refresh_stats_tab(history_df)

with tab_dt_health:
    dt_health_tab.render_dt_health_tab(metadata_df)

with tab3:
    st.header("Product Performance Analysis (Example Tab)")
    st.write("This is a placeholder for future content.")
    example_df = pd.DataFrame({
        "Product": ["A", "B", "C", "D"],
        "Sales": [100, 150, 80, 200]
    })
    st.dataframe(example_df)
