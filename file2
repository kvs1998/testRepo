import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# Sample data (based on the image provided)
data = {
    "TABLE_ID": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    "EXEC1_TARGET_LAG": [7200, 120, 120, 120, 120, 300, 7200, 7200, 7200, 7200],
    "EXEC1_MEAN_LAG": [15197, 1308, 1179, 76, 73, 101, 15197, 3886, 3159, 3105],
    "EXEC2_TARGET_LAG": [7200, 120, 120, 120, 120, 300, 7200, 7200, 7200, 7200],
    "EXEC2_MEAN_LAG": [15197, 1308, 1180, 76, 73, 101, 15197, 4048, 3142, 3085],
    "EXEC3_TARGET_LAG": [7200, 120, 120, 120, 120, 300, 7200, 7200, 7200, 7200],
    "EXEC3_MEAN_LAG": [12659, 1294, 1176, 81, 74, 101, 12659, 4048, 3142, 3085],
}

df = pd.DataFrame(data)

# Set color scheme
colors = ['blue', 'green', 'orange']

# Plot lines for EXEC1, EXEC2, EXEC3
plt.figure(figsize=(12, 6))
for i, exec_num in enumerate(["EXEC1", "EXEC2", "EXEC3"]):
    plt.plot(df["TABLE_ID"], df[f"{exec_num}_MEAN_LAG"], 
             color=colors[i], linestyle='-', label=f"{exec_num} MEAN LAG")
    plt.plot(df["TABLE_ID"], df[f"{exec_num}_TARGET_LAG"], 
             color=colors[i], linestyle='--', alpha=0.6, label=f"{exec_num} TARGET LAG")

    # Mark target lags with square markers
    plt.scatter(df["TABLE_ID"], df[f"{exec_num}_TARGET_LAG"], color=colors[i], marker='s', alpha=0.6)

# Highlight zero mean lag values with red 'X'
zero_mean_mask = (df["EXEC1_MEAN_LAG"] == 0) & (df["EXEC2_MEAN_LAG"] == 0) & (df["EXEC3_MEAN_LAG"] == 0)
plt.scatter(df.loc[zero_mean_mask, "TABLE_ID"], df.loc[zero_mean_mask, "EXEC1_MEAN_LAG"],
            color='red', marker='x', s=100, label="Zero Mean Lag")

plt.xlabel("TABLE_ID")
plt.ylabel("Lag Values")
plt.title("Mean Lag and Target Lag per Execution")
plt.legend()
plt.grid(True, linestyle='--', alpha=0.5)
plt.show()





import matplotlib.pyplot as plt
import numpy as np

# Line widths in decreasing order
lw_exec1, lw_exec2, lw_exec3 = 2.5, 2, 1.5

# Plot lines
plt.plot(table_ids, exec1_mean_lag, 'b-', linewidth=lw_exec1, label="EXEC1 MEAN LAG")
plt.plot(table_ids, exec1_target_lag, 'b--', linewidth=lw_exec1, label="EXEC1 TARGET LAG")

plt.plot(table_ids, exec2_mean_lag, 'g-', linewidth=lw_exec2, label="EXEC2 MEAN LAG")
plt.scatter(table_ids, exec2_target_lag, color='g', marker='s', label="EXEC2 TARGET LAG")

plt.plot(table_ids, exec3_mean_lag, 'orange', linewidth=lw_exec3, label="EXEC3 MEAN LAG")
plt.scatter(table_ids, exec3_target_lag, color='orange', marker='s', label="EXEC3 TARGET LAG")

# Highlight zero mean lag points
for i, (m1, m2, m3) in enumerate(zip(exec1_mean_lag, exec2_mean_lag, exec3_mean_lag)):
    if m1 == 0 and m2 == 0 and m3 == 0:
        plt.scatter(table_ids[i], 0, color='red', marker='x', s=100, label="Zero Mean Lag")

# Axis labels and title
plt.xlabel("TABLE_ID")
plt.ylabel("Lag Values")
plt.title("Mean Lag and Target Lag per Execution")

# Improve legend formatting
plt.legend()
plt.grid(True, linestyle="--", alpha=0.6)
plt.xticks(table_ids)  # Ensuring discrete x-axis labels
