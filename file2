import matplotlib.pyplot as plt
import pandas as pd

# Example Data (Replace with actual Snowflake Data)
data = {
    "table_id": [1, 1, 1, 2, 2, 3, 3, 3],  # Same table across executions
    "sub_table_id": [1, 2, 3, 1, 2, 1, 2, 3],  # Latest execution is 1
    "mean_lag_sec": [5000, 5500, 6000, 1000, 1200, 700, 800, 900],
    "target_lag_sec": [7000, 7500, 8000, 1200, 1400, 900, 950, 1000]
}

df = pd.DataFrame(data)

# Pivot the data to get time trends
pivot_mean_lag = df.pivot(index="table_id", columns="sub_table_id", values="mean_lag_sec")
pivot_target_lag = df.pivot(index="table_id", columns="sub_table_id", values="target_lag_sec")

# Sort by latest lag (sub_table_id=1) for top tables
pivot_mean_lag = pivot_mean_lag.sort_values(by=1, ascending=False).head(10)
pivot_target_lag = pivot_target_lag.loc[pivot_mean_lag.index]  # Keep same order

# Plotting
fig, ax = plt.subplots(figsize=(10, 5))

for sub_id in [3, 2, 1]:  # Show trends from oldest to newest
    ax.plot(pivot_mean_lag.index, pivot_mean_lag[sub_id], marker="o", label=f"Execution {sub_id} - Mean Lag")

ax.plot(pivot_target_lag.index, pivot_target_lag[1], "r--s", label="Latest Target Lag")

ax.set_xticks(pivot_mean_lag.index)  # Ensure X-axis remains continuous
ax.set_xlabel("Tables (IDs)")
ax.set_ylabel("Lag (seconds)")
ax.set_title("Top 10 Tables by Mean Lag Trends (Last 3 Executions)")
ax.legend()
ax.grid(True)

plt.show()
