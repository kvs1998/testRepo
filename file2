import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import pandas as pd

# Example data (some tables missing in some executions)
tables = [1, 7, 8, 9, 12]  # Full set of table IDs
execution_1 = [12000, 8000, 3000, 4000, np.nan]  # Table 12 was missing
execution_2 = [11000, 7500, 3500, np.nan, 5000]  # Table 9 missing
execution_3 = [10000, 7000, np.nan, np.nan, 5500]  # Tables 8 & 9 missing
target_lag = [7200, 7200, 7200, 7200, 7200]  # Target lag is constant

# Convert to DataFrame for easier handling
df = pd.DataFrame({
    "Table_ID": tables,
    "Execution_1": execution_1,
    "Execution_2": execution_2,
    "Execution_3": execution_3,
    "Target_Lag": target_lag
}).set_index("Table_ID")

# Sort by latest known lag (Execution 3 first, fallback to Execution 2, then Execution 1)
df = df.sort_values(by=["Execution_3", "Execution_2", "Execution_1"], ascending=False)

# Set style
sns.set_style("whitegrid")
palette = sns.color_palette("muted", 3)

fig, ax = plt.subplots(figsize=(10, 5))

# Plot each execution, ignoring missing values (will break line for missing points)
ax.plot(df.index, df["Execution_3"], label="Execution 3 - Mean Lag", color=palette[0], marker='o', markersize=5, linewidth=1)
ax.plot(df.index, df["Execution_2"], label="Execution 2 - Mean Lag", color=palette[1], marker='s', markersize=5, linewidth=1)
ax.plot(df.index, df["Execution_1"], label="Execution 1 - Mean Lag", color=palette[2], marker='^', markersize=5, linewidth=1)

# Plot Target Lag as a dashed line
ax.plot(df.index, df["Target_Lag"], label="Latest Target Lag", color='red', linestyle='dashed', marker='s', markersize=5, linewidth=1)

# Improve readability
ax.set_title("Top 10 Tables by Mean Lag Trends (Last 3 Executions)", fontsize=14, fontweight='bold')
ax.set_xlabel("Tables (IDs)", fontsize=12)
ax.set_ylabel("Lag (seconds)", fontsize=12)

# Adjust legend
ax.legend(loc="upper right", fontsize="small", frameon=False)

# Subtle gridlines
ax.grid(True, linestyle="--", alpha=0.6)

plt.show()
