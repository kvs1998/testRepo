import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import plotly.express as px

st.set_page_config(layout="wide")

st.title("My Tabbed Chart Dashboard with Section Below Columns")

tab1, tab2, tab3 = st.tabs(["Overview Charts", "Detailed Sales", "Product Analysis"])

with tab1:
    st.header("Overall Performance (Tab 1)")

    # --- Start of the two columns section ---
    colA, colB = st.columns(2)
    with colA:
        st.subheader("Total Revenue")
        st.metric(label="Revenue", value="$ 1,234,567", delta="10% from last month")
        df_tab1_1 = pd.DataFrame({
            "Day": pd.date_range("2023-01-01", periods=30),
            "Users": np.random.randint(100, 500, 30)
        })
        st.line_chart(df_tab1_1, x="Day", y="Users")
    with colB:
        st.subheader("New Customers")
        st.metric(label="Customers", value="1,200", delta="50 new customers")
        df_tab1_2 = pd.DataFrame({
            "Category": ["Electronics", "Clothing", "Books", "Home"],
            "Sales": [500000, 300000, 150000, 280000]
        })
        fig_tab1_2 = px.bar(df_tab1_2, x="Category", y="Sales", title="Sales by Category")
        st.plotly_chart(fig_tab1_2, use_container_width=True)
    # --- End of the two columns section ---

    st.divider() # Optional: Add a visual separator

    # --- Start of the horizontal section below the columns ---
    st.header("Daily User Engagement (Horizontal Section Below Columns)")
    st.write("This chart spans the full width below the two columns above.")

    df_full_width_chart = pd.DataFrame({
        "Date": pd.date_range("2023-01-01", periods=100),
        "Page_Views": np.random.randint(500, 2000, 100),
        "Bounces": np.random.randint(50, 200, 100)
    })
    fig_full_width = px.line(df_full_width_chart, x="Date", y=["Page_Views", "Bounces"],
                             title="Daily Page Views and Bounces")
    st.plotly_chart(fig_full_width, use_container_width=True)

    st.subheader("Key Performance Indicators Summary")
    col_kpi1, col_kpi2, col_kpi3 = st.columns(3)
    with col_kpi1:
        st.metric("Avg Session Duration", "5 min 30 sec")
    with col_kpi2:
        st.metric("Bounce Rate", "45%")
    with col_kpi3:
        st.metric("Conversion Rate", "2.5%")

    st.markdown("---") # Another way to add a separator

    st.write("This is some additional text content, spanning the full width.")

    # --- End of the horizontal section ---


with tab2:
    st.header("Sales Breakdown by Region")
    st.write("Here you can see a more detailed breakdown of sales figures.")
    df_tab2 = pd.DataFrame({
        "Region": ["North", "South", "East", "West"],
        "Q1": np.random.randint(100000, 300000, 4),
        "Q2": np.random.randint(120000, 350000, 4),
        "Q3": np.random.randint(150000, 400000, 4),
        "Q4": np.random.randint(180000, 450000, 4)
    })
    st.dataframe(df_tab2)
    fig_tab2 = px.bar(df_tab2.set_index("Region"), barmode="group", title="Quarterly Sales by Region")
    st.plotly_chart(fig_tab2, use_container_width=True)

with tab3:
    st.header("Product Performance Analysis")
    st.write("Analyze individual product performance and profitability.")
    df_tab3 = pd.DataFrame({
        "Product_ID": [f"P{i:03d}" for i in range(1, 11)],
        "Units_Sold": np.random.randint(50, 500, 10),
        "Revenue": np.random.randint(1000, 10000, 10)
    })
    st.dataframe(df_tab3)
    fig_tab3 = px.scatter(df_tab3, x="Units_Sold", y="Revenue", size="Units_Sold",
                          hover_name="Product_ID", title="Units Sold vs Revenue per Product")
    st.plotly_chart(fig_tab3, use_container_width=True)
